"Asm.fif" include
// automatically generated from raffle.tolk, constants.tolk, errors.tolk, storage.tolk, messages.tolk, utils.tolk
PROGRAM{
  DECLPROC RaffleCandidateStorage.load()
  DECLPROC RaffleCandidateStorage.save()
  DECLPROC RaffleParticipantStorage.load()
  DECLPROC RaffleParticipantStorage.save()
  0 DECLMETHOD onInternalMessage()
  119581 DECLMETHOD raffleData()
  92863 DECLMETHOD raffleCandidateAddress()
  77229 DECLMETHOD raffleParticipantAddress()
  // 6 functions inlined in-place:
  // - SnakeString.unpackFromSlice (0 calls)
  // - SnakeString.packToBuilder (0 calls)
  // - RaffleStorage.load (4 calls)
  // - RaffleStorage.save (3 calls)
  // - calculateRaffleCandidateAddress (4 calls)
  // - calculateRaffleParticipantAddress (3 calls)
  // contracts/storage.tolk:40  (note: function never called!)
  RaffleCandidateStorage.load() PROC:<{	// 
    // 41: return RaffleCandidateStorage.fromCell(contract.getData())
    c4 PUSH                 	//  '0
    CTOS                    	//  s
    LDMSGADDR               	//  '4 s
    LDMSGADDR               	//  '4 '5 s
    256 LDSLICE             	//  '4 '5 '7 s
    1 LDI                   	//  '4 '5 '7 '9 s
    1 LDU                   	//  '4 '5 '7 '9 '12 s
    SWAP                    	//  '4 '5 '7 '9 s '12
    IF:<{                   	//  '4 '5 '7 '9 s
      64 LDU                	//  '4 '5 '7 '9 '10 s
    }>ELSE<{                	//  '4 '5 '7 '9 s
      PUSHNULL              	//  '4 '5 '7 '9 s '10
      SWAP                  	//  '4 '5 '7 '9 '10 s
    }>
    1 LDU                   	//  '4 '5 '7 '9 '10 '18 s
    SWAP                    	//  '4 '5 '7 '9 '10 s '18
    IF:<{                   	//  '4 '5 '7 '9 '10 s
      64 LDU                	//  '4 '5 '7 '9 '10 '16 s
    }>ELSE<{                	//  '4 '5 '7 '9 '10 s
      PUSHNULL              	//  '4 '5 '7 '9 '10 s '16
      SWAP                  	//  '4 '5 '7 '9 '10 '16 s
    }>
    ENDS                    	//  '4 '5 '7 '9 '10 '16
  }>
  // contracts/storage.tolk:44  (note: function never called!)
  RaffleCandidateStorage.save() PROC:<{	//  self.raffleAddress self.userAddress self.conditions self.isMatched self.telegramID self.participantIndex
    // 45: contract.setData(self.toCell())
    s0 s5 XCHG
    NEWC                    	//  self.participantIndex self.userAddress self.conditions self.isMatched self.telegramID self.raffleAddress b
    STSLICE                 	//  self.participantIndex self.userAddress self.conditions self.isMatched self.telegramID b
    s1 s4 XCHG              	//  self.participantIndex self.telegramID self.conditions self.isMatched self.userAddress b
    STSLICE                 	//  self.participantIndex self.telegramID self.conditions self.isMatched b
    s2 PUSH                 	//  self.participantIndex self.telegramID self.conditions self.isMatched b self.conditions
    SBITREFS                	//  self.participantIndex self.telegramID self.conditions self.isMatched b '8 '9
    9 THROWIF               	//  self.participantIndex self.telegramID self.conditions self.isMatched b '8
    8 PUSHPOW2              	//  self.participantIndex self.telegramID self.conditions self.isMatched b '8 '13=256
    EQUAL                   	//  self.participantIndex self.telegramID self.conditions self.isMatched b '12
    9 THROWIFNOT            	//  self.participantIndex self.telegramID self.conditions self.isMatched b
    s1 s2 XCHG              	//  self.participantIndex self.telegramID self.isMatched self.conditions b
    STSLICE                 	//  self.participantIndex self.telegramID self.isMatched b
    1 STI                   	//  self.participantIndex self.telegramID b
    OVER                    	//  self.participantIndex self.telegramID b self.telegramID
    ISNULL                  	//  self.participantIndex self.telegramID b '16
    IF:<{                   	//  self.participantIndex self.telegramID b
      NIP                   	//  self.participantIndex b
      b{0} STSLICECONST     	//  self.participantIndex b
    }>ELSE<{                	//  self.participantIndex self.telegramID b
      b{1} STSLICECONST     	//  self.participantIndex self.telegramID b
      64 STU                	//  self.participantIndex b
    }>
    OVER                    	//  self.participantIndex b self.participantIndex
    ISNULL                  	//  self.participantIndex b '22
    IF:<{                   	//  self.participantIndex b
      NIP                   	//  b
      b{0} STSLICECONST     	//  b
    }>ELSE<{                	//  self.participantIndex b
      b{1} STSLICECONST     	//  self.participantIndex b
      64 STU                	//  b
    }>
    ENDC                    	//  '28
    c4 POP                  	// 
  }>
  // contracts/storage.tolk:57  (note: function never called!)
  RaffleParticipantStorage.load() PROC:<{	// 
    // 58: return RaffleParticipantStorage.fromCell(contract.getData())
    c4 PUSH                 	//  '0
    CTOS                    	//  s
    LDMSGADDR               	//  '4 s
    64 LDU                  	//  '4 '6 s
    1 LDU                   	//  '4 '6 '9 s
    SWAP                    	//  '4 '6 s '9
    IF:<{                   	//  '4 '6 s
      LDMSGADDR             	//  '4 '6 '7 s
    }>ELSE<{                	//  '4 '6 s
      PUSHNULL              	//  '4 '6 s '7
      SWAP                  	//  '4 '6 '7 s
    }>
    1 LDU                   	//  '4 '6 '7 '14 s
    SWAP                    	//  '4 '6 '7 s '14
    IF:<{                   	//  '4 '6 '7 s
      8 LDU                 	//  '4 '6 '7 '12 s
    }>ELSE<{                	//  '4 '6 '7 s
      PUSHNULL              	//  '4 '6 '7 s '12
      SWAP                  	//  '4 '6 '7 '12 s
    }>
    ENDS                    	//  '4 '6 '7 '12
  }>
  // contracts/storage.tolk:61  (note: function never called!)
  RaffleParticipantStorage.save() PROC:<{	//  self.raffleAddress self.participantIndex self.userAddress self.winnerIndex
    // 62: contract.setData(self.toCell())
    s0 s3 XCHG
    NEWC                    	//  self.winnerIndex self.participantIndex self.userAddress self.raffleAddress b
    STSLICE                 	//  self.winnerIndex self.participantIndex self.userAddress b
    s1 s2 XCHG              	//  self.winnerIndex self.userAddress self.participantIndex b
    64 STU                  	//  self.winnerIndex self.userAddress b
    OVER                    	//  self.winnerIndex self.userAddress b self.userAddress
    ISNULL                  	//  self.winnerIndex self.userAddress b '7
    IF:<{                   	//  self.winnerIndex self.userAddress b
      NIP                   	//  self.winnerIndex b
      b{0} STSLICECONST     	//  self.winnerIndex b
    }>ELSE<{                	//  self.winnerIndex self.userAddress b
      b{1} STSLICECONST     	//  self.winnerIndex self.userAddress b
      STSLICE               	//  self.winnerIndex b
    }>
    OVER                    	//  self.winnerIndex b self.winnerIndex
    ISNULL                  	//  self.winnerIndex b '12
    IF:<{                   	//  self.winnerIndex b
      NIP                   	//  b
      b{0} STSLICECONST     	//  b
    }>ELSE<{                	//  self.winnerIndex b
      b{1} STSLICECONST     	//  self.winnerIndex b
      8 STU                 	//  b
    }>
    ENDC                    	//  '18
    c4 POP                  	// 
  }>
  // contracts/raffle.tolk:14
  onInternalMessage() PROC:<{ 	//  in.body
    // 14: fun onInternalMessage(inMessage: InMessage)
    INMSG_BOUNCED           	//  in.body '1
    0 THROWIF               	//  in.body
    // 15: val inMessageBody = lazy AllowedMessageRaffleParticipant.fromSlice(inMessage.body)
    DUP                     	//  in.body lazyS
    // 22: return RaffleStorage.fromCell(contract.getData())
    c4 PUSH                 	//  in.body lazyS '25
    // 16: var storage = lazy RaffleStorage.load()
    CTOS                    	//  in.body lazyS lazyS
    // 18: match (inMessageBody)
    LDMSGADDR               	//  in.body lazyS storage.ownerAddress lazyS
    32 LDU                  	//  in.body lazyS storage.ownerAddress storage.minCandidateQuantity lazyS
    256 LDSLICE             	//  in.body lazyS storage.ownerAddress storage.minCandidateQuantity storage.conditions lazyS
    32 LDU                  	//  in.body lazyS storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration lazyS
    LDREF                   	//  in.body lazyS storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode lazyS
    LDREF                   	//  in.body lazyS storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode lazyS
    64 LDU                  	//  in.body lazyS storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt lazyS
    64 LDI                  	//  in.body lazyS storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime lazyS
    64 LDU                  	//  in.body lazyS storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity lazyS
    64 LDU                  	//  in.body lazyS storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity lazyS
    8 LDU                   	//  in.body lazyS storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity lazyS
    PLDOPTREF               	//  in.body lazyS storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity storage.winners
    s0 s12 XCHG             	//  in.body storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity lazyS
    x{13370010} SDBEGINSQ   	//  in.body storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity lazyS '49
    IFJMP:<{                	//  in.body storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity lazyS
      s8 POP
      6 BLKDROP             	//  in.body storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions lazyS storage.candidateCode
      s5 s6 XCHG2
      5 BLKDROP             	//  storage.candidateCode lazyS
      // 20: assert (inMessage.valueCoins >= MIN_TONS_FOR_RAFFLE_CANDIDATE_STORAGE + RAFFLE_CANDIDATE_INITIALIZE_OPERATION_FEE) throw ERROR_NOT_ENOUGH_TONS
      4097 PUSHINT          	//  storage.candidateCode lazyS '52=4097
      INMSG_VALUE           	//  storage.candidateCode lazyS '52=4097 '53
      6797600 PUSHINT       	//  storage.candidateCode lazyS '52=4097 '53 '59
      GEQ                   	//  storage.candidateCode lazyS '52=4097 '60
      THROWANYIFNOT         	//  storage.candidateCode lazyS
      // 22: val deployRaffleCandidateMessage = createMessage(
      64 PLDU               	//  storage.candidateCode inMessageBody.USlot2
      // 24: dest: calculateRaffleCandidateAddress(contract.getAddress(), inMessage.senderAddress, storage.candidateCode)
      MYADDR                	//  storage.candidateCode inMessageBody.USlot2 '66
      INMSG_SRC             	//  storage.candidateCode inMessageBody.USlot2 '66 '67
      // 66: val data: RaffleCandidateStorage = { raffleAddress, userAddress, conditions: createBits256None(), isMatched: false, telegramID: null, participantIndex: null }
      x{0000000000000000000000000000000000000000000000000000000000000000} PUSHSLICE	//  storage.candidateCode inMessageBody.USlot2 '66 '67 '82
      PUSHNULL              	//  storage.candidateCode inMessageBody.USlot2 '66 '67 '82 '84
      PUSHNULL              	//  storage.candidateCode inMessageBody.USlot2 data.raffleAddress data.userAddress data.conditions data.telegramID data.participantIndex
      // 72: data: data.toCell()
      s0 s4 XCHG
      NEWC                  	//  storage.candidateCode inMessageBody.USlot2 data.participantIndex data.userAddress data.conditions data.telegramID data.raffleAddress b
      STSLICE               	//  storage.candidateCode inMessageBody.USlot2 data.participantIndex data.userAddress data.conditions data.telegramID b
      s1 s3 XCHG            	//  storage.candidateCode inMessageBody.USlot2 data.participantIndex data.telegramID data.conditions data.userAddress b
      STSLICE               	//  storage.candidateCode inMessageBody.USlot2 data.participantIndex data.telegramID data.conditions b
      OVER                  	//  storage.candidateCode inMessageBody.USlot2 data.participantIndex data.telegramID data.conditions b data.conditions
      SBITREFS              	//  storage.candidateCode inMessageBody.USlot2 data.participantIndex data.telegramID data.conditions b '89 '90
      9 THROWIF             	//  storage.candidateCode inMessageBody.USlot2 data.participantIndex data.telegramID data.conditions b '89
      8 PUSHPOW2            	//  storage.candidateCode inMessageBody.USlot2 data.participantIndex data.telegramID data.conditions b '89 '94=256
      EQUAL                 	//  storage.candidateCode inMessageBody.USlot2 data.participantIndex data.telegramID data.conditions b '93
      9 THROWIFNOT          	//  storage.candidateCode inMessageBody.USlot2 data.participantIndex data.telegramID data.conditions b
      STSLICE               	//  storage.candidateCode inMessageBody.USlot2 data.participantIndex data.telegramID b
      b{0} STSLICECONST     	//  storage.candidateCode inMessageBody.USlot2 data.participantIndex data.telegramID b
      OVER                  	//  storage.candidateCode inMessageBody.USlot2 data.participantIndex data.telegramID b data.telegramID
      ISNULL                	//  storage.candidateCode inMessageBody.USlot2 data.participantIndex data.telegramID b '97
      IF:<{                 	//  storage.candidateCode inMessageBody.USlot2 data.participantIndex data.telegramID b
        NIP                 	//  storage.candidateCode inMessageBody.USlot2 data.participantIndex b
        b{0} STSLICECONST   	//  storage.candidateCode inMessageBody.USlot2 data.participantIndex b
      }>ELSE<{              	//  storage.candidateCode inMessageBody.USlot2 data.participantIndex data.telegramID b
        b{1} STSLICECONST   	//  storage.candidateCode inMessageBody.USlot2 data.participantIndex data.telegramID b
        64 STU              	//  storage.candidateCode inMessageBody.USlot2 data.participantIndex b
      }>
      OVER                  	//  storage.candidateCode inMessageBody.USlot2 data.participantIndex b data.participantIndex
      ISNULL                	//  storage.candidateCode inMessageBody.USlot2 data.participantIndex b '103
      IF:<{                 	//  storage.candidateCode inMessageBody.USlot2 data.participantIndex b
        NIP                 	//  storage.candidateCode inMessageBody.USlot2 b
        b{0} STSLICECONST   	//  storage.candidateCode inMessageBody.USlot2 b
      }>ELSE<{              	//  storage.candidateCode inMessageBody.USlot2 data.participantIndex b
        b{1} STSLICECONST   	//  storage.candidateCode inMessageBody.USlot2 data.participantIndex b
        64 STU              	//  storage.candidateCode inMessageBody.USlot2 b
      }>
      ENDC                  	//  'USlot1 inMessageBody.USlot2 'USlot2
      // 27: recipientAddress: inMessage.senderAddress
      INMSG_SRC             	//  'USlot2 '133 'USlot3 '132
      // 22: val deployRaffleCandidateMessage = createMessage(
      NEWC                  	//  'USlot2 '133 'USlot3 '132 b
      b{01000010000000000} STSLICECONST	//  'USlot2 '133 'USlot3 '132 b
      s4 s2 PUSH2           	//  'USlot2 '133 'USlot3 '132 b 'USlot2 'USlot3
                       // code data
          DUP2            // code data code data
          HASHCU
          SWAP
          HASHCU          // code data dataHash codeHash
          SWAP2           // dataHash codeHash code data
          CDEPTH
          SWAP
          CDEPTH          // dataHash codeHash dataDepth codeDepth
          NEWC
          x{020134} STSLICECONST // store refs_descriptor | bits_descriptor | data
          16 STU                 // store codeDepth
          16 STU                 // store dataDepth
          256 STU                // store codeHash
          256 STU                // store dataHash
          ONE HASHEXT_SHA256	//  'USlot2 '133 'USlot3 '132 b '155
      256 STUR              	//  'USlot2 '133 'USlot3 '132 b
      140 PUSHINT
      117 STUR              	//  'USlot2 '133 'USlot3 '132 b
      s1 s4 XCHG            	//  '132 '133 'USlot3 'USlot2 b
      STREF                 	//  '132 '133 'USlot3 b
      STREF                 	//  '132 '133 b
      x{13370020} STSLICECONST	//  '132 '133 b
      s1 s2 XCHG            	//  '133 '132 b
      STSLICE               	//  '133 b
      64 STU                	//  b
      ENDC                  	//  deployRaffleCandidateMessage
      // 32: reserveToncoinsOnBalance(MIN_TONS_FOR_RAFFLE_STORAGE, RESERVE_MODE_EXACT_AMOUNT)
      10000000 PUSHINT      	//  deployRaffleCandidateMessage '186=10000000
      0 PUSHINT             	//  deployRaffleCandidateMessage '186=10000000 '187=0
      RAWRESERVE            	//  deployRaffleCandidateMessage
      // 33: deployRaffleCandidateMessage.send(SEND_MODE_CARRY_ALL_BALANCE)
      7 PUSHPOW2            	//  deployRaffleCandidateMessage '188=128
      SENDRAWMSG            	// 
    }>                      	//  in.body storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity lazyS
    // 18: match (inMessageBody)
    x{13370021} SDBEGINSQ   	//  in.body storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity lazyS '49
    IFJMP:<{                	//  in.body storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity lazyS
      // 36: assert (inMessage.valueCoins >= RAFFLE_CANDIDATE_REGISTERATION_NOTIFICATION_OPERATION_FEE) throw ERROR_NOT_ENOUGH_TONS
      s13 POP               	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity
      4097 PUSHINT          	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity '191=4097
      INMSG_VALUE           	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity '191=4097 '192
      1744000 PUSHINT       	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity '191=4097 '192 '196
      GEQ                   	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity '191=4097 '197
      THROWANYIFNOT         	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity
      // 38: storage.candidatesQuantity += 1
      s0 s2 XCHG            	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.winnersQuantity storage.participantsQuantity storage.candidatesQuantity
      INC                   	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.winnersQuantity storage.participantsQuantity storage.candidatesQuantity
      s0 s9 PUSH2           	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.winnersQuantity storage.participantsQuantity storage.candidatesQuantity storage.candidatesQuantity storage.minCandidateQuantity
      // 39: if (storage.candidatesQuantity >= storage.minCandidateQuantity && storage.minCandidateReachedLt == 0)
      GEQ                   	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.winnersQuantity storage.participantsQuantity storage.candidatesQuantity '201
      IF:<{                 	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.winnersQuantity storage.participantsQuantity storage.candidatesQuantity
        s4 PUSH             	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.winnersQuantity storage.participantsQuantity storage.candidatesQuantity storage.minCandidateReachedLt
        0 EQINT             	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.winnersQuantity storage.participantsQuantity storage.candidatesQuantity '204
        0 NEQINT            	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.winnersQuantity storage.participantsQuantity storage.candidatesQuantity '202
      }>ELSE<{              	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.winnersQuantity storage.participantsQuantity storage.candidatesQuantity
        0 PUSHINT           	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.winnersQuantity storage.participantsQuantity storage.candidatesQuantity '202=0
      }>
      IF:<{                 	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.winnersQuantity storage.participantsQuantity storage.candidatesQuantity
        // 40: storage.minCandidateReachedLt = blockchain.logicalTime()
        s3 POP              	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.candidatesQuantity storage.winnersQuantity storage.participantsQuantity
        s3 POP              	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.participantsQuantity storage.candidatesQuantity storage.winnersQuantity
        LTIME               	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.participantsQuantity storage.candidatesQuantity storage.winnersQuantity storage.minCandidateReachedLt
        // 39: if (storage.candidatesQuantity >= storage.minCandidateQuantity && storage.minCandidateReachedLt == 0)
        s0 s3 XCHG
        // 41: storage.minCandidateReachedUnixTime = blockchain.now()
        NOW                 	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.candidatesQuantity storage.winnersQuantity storage.participantsQuantity storage.minCandidateReachedUnixTime
        // 39: if (storage.candidatesQuantity >= storage.minCandidateQuantity && storage.minCandidateReachedLt == 0)
        s0 s3 XCHG          	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.winnersQuantity storage.participantsQuantity storage.candidatesQuantity
      }>                    	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.winnersQuantity storage.participantsQuantity storage.candidatesQuantity
      // 26: contract.setData(self.toCell())
      s0 s10 XCHG
      NEWC                  	//  lazyS storage.winners storage.candidatesQuantity storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.winnersQuantity storage.participantsQuantity storage.ownerAddress b
      STSLICE               	//  lazyS storage.winners storage.candidatesQuantity storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.winnersQuantity storage.participantsQuantity b
      s1 s9 XCHG            	//  lazyS storage.winners storage.candidatesQuantity storage.participantsQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.winnersQuantity storage.minCandidateQuantity b
      32 STU                	//  lazyS storage.winners storage.candidatesQuantity storage.participantsQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.winnersQuantity b
      s7 PUSH               	//  lazyS storage.winners storage.candidatesQuantity storage.participantsQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.winnersQuantity b storage.conditions
      SBITREFS              	//  lazyS storage.winners storage.candidatesQuantity storage.participantsQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.winnersQuantity b '213 '214
      9 THROWIF             	//  lazyS storage.winners storage.candidatesQuantity storage.participantsQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.winnersQuantity b '213
      8 PUSHPOW2            	//  lazyS storage.winners storage.candidatesQuantity storage.participantsQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.winnersQuantity b '213 '218=256
      EQUAL                 	//  lazyS storage.winners storage.candidatesQuantity storage.participantsQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.winnersQuantity b '217
      9 THROWIFNOT          	//  lazyS storage.winners storage.candidatesQuantity storage.participantsQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.winnersQuantity b
      s1 s7 XCHG            	//  lazyS storage.winners storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.conditions b
      STSLICE               	//  lazyS storage.winners storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime b
      s1 s5 XCHG            	//  lazyS storage.winners storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity storage.minCandidateReachedUnixTime storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.conditionsDuration b
      32 STU                	//  lazyS storage.winners storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity storage.minCandidateReachedUnixTime storage.candidateCode storage.participantCode storage.minCandidateReachedLt b
      s1 s3 XCHG            	//  lazyS storage.winners storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity storage.minCandidateReachedUnixTime storage.minCandidateReachedLt storage.participantCode storage.candidateCode b
      STREF                 	//  lazyS storage.winners storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity storage.minCandidateReachedUnixTime storage.minCandidateReachedLt storage.participantCode b
      STREF                 	//  lazyS storage.winners storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity storage.minCandidateReachedUnixTime storage.minCandidateReachedLt b
      64 STU                	//  lazyS storage.winners storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity storage.minCandidateReachedUnixTime b
      64 STI                	//  lazyS storage.winners storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity b
      s1 s3 XCHG            	//  lazyS storage.winners storage.winnersQuantity storage.participantsQuantity storage.candidatesQuantity b
      64 STU                	//  lazyS storage.winners storage.winnersQuantity storage.participantsQuantity b
      64 STU                	//  lazyS storage.winners storage.winnersQuantity b
      8 STU                 	//  lazyS storage.winners b
      STOPTREF              	//  lazyS b
      ENDC                  	//  lazyS '227
      c4 POP                	//  lazyS
      // 45: val excessMessage = createMessage(
      LDMSGADDR             	//  '228 lazyS
      DROP                  	//  inMessageBody.USlot2
      // 49: body: createEmptyCell()
      <b b> PUSHREF         	//  inMessageBody.USlot2 '241
      // 45: val excessMessage = createMessage(
      NEWC                  	//  inMessageBody.USlot2 '241 b
      b{010000} STSLICECONST	//  inMessageBody.USlot2 '241 b
      s1 s2 XCHG            	//  '241 inMessageBody.USlot2 b
      STSLICE               	//  '241 b
      1 PUSHINT
      111 STUR              	//  '241 b
      STREF                 	//  b
      ENDC                  	//  excessMessage
      // 52: reserveToncoinsOnBalance(MIN_TONS_FOR_RAFFLE_STORAGE, RESERVE_MODE_EXACT_AMOUNT)
      10000000 PUSHINT      	//  excessMessage '291=10000000
      0 PUSHINT             	//  excessMessage '291=10000000 '292=0
      RAWRESERVE            	//  excessMessage
      // 53: excessMessage.send(SEND_MODE_CARRY_ALL_BALANCE)
      7 PUSHPOW2            	//  excessMessage '293=128
      SENDRAWMSG            	// 
    }>                      	//  in.body storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity lazyS
    // 18: match (inMessageBody)
    x{13370011} SDBEGINSQ   	//  in.body storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity lazyS '49
    IFJMP:<{                	//  in.body storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity lazyS
      s6 POP
      3 BLKDROP             	//  in.body storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode lazyS storage.minCandidateReachedLt storage.minCandidateReachedUnixTime
      // 56: assert (inMessage.valueCoins >= MIN_TONS_FOR_RAFFLE_CANDIDATE_STORAGE + RAFFLE_SET_CONDITIONS_OPERATION_FEE) throw ERROR_NOT_ENOUGH_TONS
      s6 POP                	//  in.body storage.winners storage.ownerAddress storage.minCandidateReachedUnixTime storage.conditions storage.conditionsDuration storage.candidateCode lazyS storage.minCandidateReachedLt
      s7 POP                	//  in.body storage.minCandidateReachedLt storage.ownerAddress storage.minCandidateReachedUnixTime storage.conditions storage.conditionsDuration storage.candidateCode lazyS
      s7 POP                	//  lazyS storage.minCandidateReachedLt storage.ownerAddress storage.minCandidateReachedUnixTime storage.conditions storage.conditionsDuration storage.candidateCode
      4097 PUSHINT          	//  lazyS storage.minCandidateReachedLt storage.ownerAddress storage.minCandidateReachedUnixTime storage.conditions storage.conditionsDuration storage.candidateCode '296=4097
      INMSG_VALUE           	//  lazyS storage.minCandidateReachedLt storage.ownerAddress storage.minCandidateReachedUnixTime storage.conditions storage.conditionsDuration storage.candidateCode '296=4097 '297
      7920000 PUSHINT       	//  lazyS storage.minCandidateReachedLt storage.ownerAddress storage.minCandidateReachedUnixTime storage.conditions storage.conditionsDuration storage.candidateCode '296=4097 '297 '303
      GEQ                   	//  lazyS storage.minCandidateReachedLt storage.ownerAddress storage.minCandidateReachedUnixTime storage.conditions storage.conditionsDuration storage.candidateCode '296=4097 '304
      THROWANYIFNOT         	//  lazyS storage.minCandidateReachedLt storage.ownerAddress storage.minCandidateReachedUnixTime storage.conditions storage.conditionsDuration storage.candidateCode
      // 57: assert (inMessage.senderAddress == storage.ownerAddress) throw ERROR_NOT_AUTHORIZED
      4919 PUSHINT          	//  lazyS storage.minCandidateReachedLt storage.ownerAddress storage.minCandidateReachedUnixTime storage.conditions storage.conditionsDuration storage.candidateCode '306=4919
      INMSG_SRC             	//  lazyS storage.minCandidateReachedLt storage.ownerAddress storage.minCandidateReachedUnixTime storage.conditions storage.conditionsDuration storage.candidateCode '306=4919 '307
      s0 s6 XCHG2           	//  lazyS storage.minCandidateReachedLt '306=4919 storage.minCandidateReachedUnixTime storage.conditions storage.conditionsDuration storage.candidateCode '307 storage.ownerAddress
      SDEQ                  	//  lazyS storage.minCandidateReachedLt '306=4919 storage.minCandidateReachedUnixTime storage.conditions storage.conditionsDuration storage.candidateCode '309
      s1 s5 XCHG            	//  lazyS storage.minCandidateReachedLt storage.candidateCode storage.minCandidateReachedUnixTime storage.conditions storage.conditionsDuration '306=4919 '309
      THROWANYIFNOT         	//  lazyS storage.minCandidateReachedLt storage.candidateCode storage.minCandidateReachedUnixTime storage.conditions storage.conditionsDuration
      // 58: assert (storage.minCandidateReachedLt > 0 || TEST_MODE) throw ERROR_NOT_READY
      12289 PUSHINT         	//  lazyS storage.minCandidateReachedLt storage.candidateCode storage.minCandidateReachedUnixTime storage.conditions storage.conditionsDuration '311=12289
      s0 s5 XCHG            	//  lazyS '311=12289 storage.candidateCode storage.minCandidateReachedUnixTime storage.conditions storage.conditionsDuration storage.minCandidateReachedLt
      0 GTINT               	//  lazyS '311=12289 storage.candidateCode storage.minCandidateReachedUnixTime storage.conditions storage.conditionsDuration '313
      IF:<{                 	//  lazyS '311=12289 storage.candidateCode storage.minCandidateReachedUnixTime storage.conditions storage.conditionsDuration
        -1 PUSHINT          	//  lazyS '311=12289 storage.candidateCode storage.minCandidateReachedUnixTime storage.conditions storage.conditionsDuration '314=-1
      }>ELSE<{              	//  lazyS '311=12289 storage.candidateCode storage.minCandidateReachedUnixTime storage.conditions storage.conditionsDuration
        FALSE               	//  lazyS '311=12289 storage.candidateCode storage.minCandidateReachedUnixTime storage.conditions storage.conditionsDuration '314
      }>
      s1 s5 XCHG            	//  lazyS storage.conditionsDuration storage.candidateCode storage.minCandidateReachedUnixTime storage.conditions '311=12289 '314
      THROWANYIFNOT         	//  lazyS storage.conditionsDuration storage.candidateCode storage.minCandidateReachedUnixTime storage.conditions
      // 59: assert ((storage.minCandidateReachedUnixTime > 0 && (blockchain.now() < (storage.minCandidateReachedUnixTime + storage.conditionsDuration))) || TEST_MODE) throw ERROR_EXPIRED
      16385 PUSHINT         	//  lazyS storage.conditionsDuration storage.candidateCode storage.minCandidateReachedUnixTime storage.conditions '320=16385
      s2 PUSH               	//  lazyS storage.conditionsDuration storage.candidateCode storage.minCandidateReachedUnixTime storage.conditions '320=16385 storage.minCandidateReachedUnixTime
      0 GTINT               	//  lazyS storage.conditionsDuration storage.candidateCode storage.minCandidateReachedUnixTime storage.conditions '320=16385 '322
      IF:<{                 	//  lazyS storage.conditionsDuration storage.candidateCode storage.minCandidateReachedUnixTime storage.conditions '320=16385
        s0 s2 XCHG
        NOW                 	//  lazyS storage.conditionsDuration storage.candidateCode '320=16385 storage.conditions storage.minCandidateReachedUnixTime '324
        s0 s5 XCHG          	//  lazyS '324 storage.candidateCode '320=16385 storage.conditions storage.minCandidateReachedUnixTime storage.conditionsDuration
        ADD                 	//  lazyS '324 storage.candidateCode '320=16385 storage.conditions '325
        s1 s4 XCHG          	//  lazyS storage.conditions storage.candidateCode '320=16385 '324 '325
        LESS                	//  lazyS storage.conditions storage.candidateCode '320=16385 '326
        0 NEQINT            	//  lazyS storage.conditions storage.candidateCode '320=16385 '323
      }>ELSE<{              	//  lazyS storage.conditionsDuration storage.candidateCode storage.minCandidateReachedUnixTime storage.conditions '320=16385
        s2 POP              	//  lazyS storage.conditionsDuration storage.candidateCode '320=16385 storage.conditions
        s3 POP              	//  lazyS storage.conditions storage.candidateCode '320=16385
        0 PUSHINT           	//  lazyS storage.conditions storage.candidateCode '320=16385 '323=0
      }>
      IF:<{                 	//  lazyS storage.conditions storage.candidateCode '320=16385
        -1 PUSHINT          	//  lazyS storage.conditions storage.candidateCode '320=16385 '330=-1
      }>ELSE<{              	//  lazyS storage.conditions storage.candidateCode '320=16385
        FALSE               	//  lazyS storage.conditions storage.candidateCode '320=16385 '330
      }>
      THROWANYIFNOT         	//  lazyS storage.conditions storage.candidateCode
      // 61: val candidate = calculateRaffleCandidateAddress(contract.getAddress(), inMessageBody.userAddress, storage.candidateCode)
      s0 s2 XCHG            	//  storage.candidateCode storage.conditions lazyS
      LDMSGADDR             	//  storage.candidateCode storage.conditions inMessageBody.USlot1 lazyS
      256 LDSLICE           	//  storage.candidateCode storage.conditions inMessageBody.USlot1 '338 lazyS
      DROP                  	//  storage.candidateCode storage.conditions inMessageBody.USlot1 inMessageBody.USlot2
      MYADDR                	//  storage.candidateCode storage.conditions inMessageBody.USlot1 inMessageBody.USlot2 '346
      // 66: val data: RaffleCandidateStorage = { raffleAddress, userAddress, conditions: createBits256None(), isMatched: false, telegramID: null, participantIndex: null }
      x{0000000000000000000000000000000000000000000000000000000000000000} PUSHSLICE	//  storage.candidateCode storage.conditions inMessageBody.USlot1 inMessageBody.USlot2 '346 '360
      PUSHNULL              	//  storage.candidateCode storage.conditions inMessageBody.USlot1 inMessageBody.USlot2 '346 '360 '362
      PUSHNULL              	//  storage.candidateCode storage.conditions data.userAddress inMessageBody.USlot2 data.raffleAddress data.conditions data.telegramID data.participantIndex
      // 72: data: data.toCell()
      s0 s3 XCHG
      NEWC                  	//  storage.candidateCode storage.conditions data.userAddress inMessageBody.USlot2 data.participantIndex data.conditions data.telegramID data.raffleAddress b
      STSLICE               	//  storage.candidateCode storage.conditions data.userAddress inMessageBody.USlot2 data.participantIndex data.conditions data.telegramID b
      s1 s5 XCHG            	//  storage.candidateCode storage.conditions data.telegramID inMessageBody.USlot2 data.participantIndex data.conditions data.userAddress b
      STSLICE               	//  storage.candidateCode storage.conditions data.telegramID inMessageBody.USlot2 data.participantIndex data.conditions b
      OVER                  	//  storage.candidateCode storage.conditions data.telegramID inMessageBody.USlot2 data.participantIndex data.conditions b data.conditions
      SBITREFS              	//  storage.candidateCode storage.conditions data.telegramID inMessageBody.USlot2 data.participantIndex data.conditions b '367 '368
      9 THROWIF             	//  storage.candidateCode storage.conditions data.telegramID inMessageBody.USlot2 data.participantIndex data.conditions b '367
      8 PUSHPOW2            	//  storage.candidateCode storage.conditions data.telegramID inMessageBody.USlot2 data.participantIndex data.conditions b '367 '372=256
      EQUAL                 	//  storage.candidateCode storage.conditions data.telegramID inMessageBody.USlot2 data.participantIndex data.conditions b '371
      9 THROWIFNOT          	//  storage.candidateCode storage.conditions data.telegramID inMessageBody.USlot2 data.participantIndex data.conditions b
      STSLICE               	//  storage.candidateCode storage.conditions data.telegramID inMessageBody.USlot2 data.participantIndex b
      b{0} STSLICECONST     	//  storage.candidateCode storage.conditions data.telegramID inMessageBody.USlot2 data.participantIndex b
      s3 PUSH               	//  storage.candidateCode storage.conditions data.telegramID inMessageBody.USlot2 data.participantIndex b data.telegramID
      ISNULL                	//  storage.candidateCode storage.conditions data.telegramID inMessageBody.USlot2 data.participantIndex b '375
      IF:<{                 	//  storage.candidateCode storage.conditions data.telegramID inMessageBody.USlot2 data.participantIndex b
        s3 POP              	//  storage.candidateCode storage.conditions b inMessageBody.USlot2 data.participantIndex
        s0 s2 XCHG          	//  storage.candidateCode storage.conditions data.participantIndex inMessageBody.USlot2 b
        b{0} STSLICECONST   	//  storage.candidateCode storage.conditions data.participantIndex inMessageBody.USlot2 b
      }>ELSE<{              	//  storage.candidateCode storage.conditions data.telegramID inMessageBody.USlot2 data.participantIndex b
        b{1} STSLICECONST   	//  storage.candidateCode storage.conditions data.telegramID inMessageBody.USlot2 data.participantIndex b
        s1 s3 XCHG          	//  storage.candidateCode storage.conditions data.participantIndex inMessageBody.USlot2 data.telegramID b
        64 STU              	//  storage.candidateCode storage.conditions data.participantIndex inMessageBody.USlot2 b
      }>
      s2 PUSH               	//  storage.candidateCode storage.conditions data.participantIndex inMessageBody.USlot2 b data.participantIndex
      ISNULL                	//  storage.candidateCode storage.conditions data.participantIndex inMessageBody.USlot2 b '381
      IF:<{                 	//  storage.candidateCode storage.conditions data.participantIndex inMessageBody.USlot2 b
        1 2 BLKDROP2        	//  storage.candidateCode storage.conditions inMessageBody.USlot2 b
        b{0} STSLICECONST   	//  storage.candidateCode storage.conditions inMessageBody.USlot2 b
      }>ELSE<{              	//  storage.candidateCode storage.conditions data.participantIndex inMessageBody.USlot2 b
        b{1} STSLICECONST   	//  storage.candidateCode storage.conditions data.participantIndex inMessageBody.USlot2 b
        s1 s2 XCHG          	//  storage.candidateCode storage.conditions inMessageBody.USlot2 data.participantIndex b
        64 STU              	//  storage.candidateCode storage.conditions inMessageBody.USlot2 b
      }>
      ENDC                  	//  candidate.stateInit.USlot1 storage.conditions inMessageBody.USlot2 candidate.stateInit.USlot2
      // 62: val candidateAddress = address.fromValidBuilder(candidate.buildAddress())
      s1 s3 XCHG            	//  inMessageBody.USlot2 storage.conditions candidate.stateInit.USlot1 candidate.stateInit.USlot2
                       // code data
          DUP2            // code data code data
          HASHCU
          SWAP
          HASHCU          // code data dataHash codeHash
          SWAP2           // dataHash codeHash code data
          CDEPTH
          SWAP
          CDEPTH          // dataHash codeHash dataDepth codeDepth
          NEWC
          x{020134} STSLICECONST // store refs_descriptor | bits_descriptor | data
          16 STU                 // store codeDepth
          16 STU                 // store dataDepth
          256 STU                // store codeHash
          256 STU                // store dataHash
          ONE HASHEXT_SHA256	//  inMessageBody.USlot2 storage.conditions '398
      NEWC                  	//  inMessageBody.USlot2 storage.conditions '398 '397
      b{10000000000} STSLICECONST	//  inMessageBody.USlot2 storage.conditions '398 '397
      256 STU               	//  inMessageBody.USlot2 storage.conditions '397
      ENDC
      CTOS                  	//  inMessageBody.USlot2 storage.conditions candidateAddress
      // 69: recipientAddress: inMessage.senderAddress
      INMSG_SRC             	//  inMessageBody.USlot2 storage.conditions candidateAddress '430
      s2 s3 XCPU            	//  inMessageBody.USlot2 '430 candidateAddress storage.conditions inMessageBody.USlot2
      // 71: isMatched: (storage.conditions as slice).bitsEqual(inMessageBody.conditions as slice)
      SDEQ                  	//  inMessageBody.USlot2 '430 candidateAddress '432
      // 64: val setConditionsMessage = createMessage(
      NEWC                  	//  inMessageBody.USlot2 '430 candidateAddress '432 refb
      x{13370022} STSLICECONST	//  inMessageBody.USlot2 '430 candidateAddress '432 refb
      s1 s3 XCHG            	//  inMessageBody.USlot2 '432 candidateAddress '430 refb
      STSLICE               	//  inMessageBody.USlot2 '432 candidateAddress refb
      s3 PUSH               	//  inMessageBody.USlot2 '432 candidateAddress refb inMessageBody.USlot2
      SBITREFS              	//  inMessageBody.USlot2 '432 candidateAddress refb '448 '449
      9 THROWIF             	//  inMessageBody.USlot2 '432 candidateAddress refb '448
      8 PUSHPOW2            	//  inMessageBody.USlot2 '432 candidateAddress refb '448 '453=256
      EQUAL                 	//  inMessageBody.USlot2 '432 candidateAddress refb '452
      9 THROWIFNOT          	//  inMessageBody.USlot2 '432 candidateAddress refb
      s1 s3 XCHG            	//  candidateAddress '432 inMessageBody.USlot2 refb
      STSLICE               	//  candidateAddress '432 refb
      1 STI                 	//  candidateAddress refb
      ENDC                  	//  candidateAddress '456
      NEWC                  	//  candidateAddress '456 b
      b{011000} STSLICECONST	//  candidateAddress '456 b
      s1 s2 XCHG            	//  '456 candidateAddress b
      STSLICE               	//  '456 b
      1 PUSHINT
      111 STUR              	//  '456 b
      STREF                 	//  b
      ENDC                  	//  setConditionsMessage
      // 75: reserveToncoinsOnBalance(MIN_TONS_FOR_RAFFLE_STORAGE, RESERVE_MODE_EXACT_AMOUNT)
      10000000 PUSHINT      	//  setConditionsMessage '494=10000000
      0 PUSHINT             	//  setConditionsMessage '494=10000000 '495=0
      RAWRESERVE            	//  setConditionsMessage
      // 76: setConditionsMessage.send(SEND_MODE_CARRY_ALL_BALANCE)
      7 PUSHPOW2            	//  setConditionsMessage '496=128
      SENDRAWMSG            	// 
    }>                      	//  in.body storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity lazyS
    // 18: match (inMessageBody)
    x{13370012} SDBEGINSQ   	//  in.body storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity lazyS '49
    IFJMP:<{                	//  in.body storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity lazyS
      // 85: ) throw ERROR_NOT_ENOUGH_TONS
      s13 POP               	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity
      4097 PUSHINT          	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity '499=4097
      // 80: inMessage.valueCoins >= (
      INMSG_VALUE           	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity '499=4097 '500
      // 82: MIN_TONS_FOR_RAFFLE_PARTICIPANT_STORAGE +
      6825600 PUSHINT       	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity '499=4097 '500 '510
      // 80: inMessage.valueCoins >= (
      GEQ                   	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity '499=4097 '511
      // 79: assert (
      THROWANYIFNOT         	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity
      // 87: val raffleCandidate = calculateRaffleCandidateAddress(contract.getAddress(), inMessageBody.userAddress, storage.candidateCode)
      s0 s12 XCHG           	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity lazyS
      LDMSGADDR             	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 lazyS
      LDMSGADDR             	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 '514 lazyS
      DROP                  	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2
      MYADDR                	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 '522
      // 66: val data: RaffleCandidateStorage = { raffleAddress, userAddress, conditions: createBits256None(), isMatched: false, telegramID: null, participantIndex: null }
      x{0000000000000000000000000000000000000000000000000000000000000000} PUSHSLICE	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 '522 '536
      PUSHNULL              	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 '522 '536 '538
      PUSHNULL              	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 '522 '536 '538 '539
      s4 PUSH               	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.raffleAddress data.conditions data.telegramID data.participantIndex data.userAddress
      // 72: data: data.toCell()
      s0 s4 XCHG
      NEWC                  	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.userAddress data.conditions data.telegramID data.participantIndex data.raffleAddress b
      STSLICE               	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.userAddress data.conditions data.telegramID data.participantIndex b
      s1 s4 XCHG            	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.participantIndex data.conditions data.telegramID data.userAddress b
      STSLICE               	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.participantIndex data.conditions data.telegramID b
      s2 PUSH               	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.participantIndex data.conditions data.telegramID b data.conditions
      SBITREFS              	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.participantIndex data.conditions data.telegramID b '543 '544
      9 THROWIF             	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.participantIndex data.conditions data.telegramID b '543
      8 PUSHPOW2            	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.participantIndex data.conditions data.telegramID b '543 '548=256
      EQUAL                 	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.participantIndex data.conditions data.telegramID b '547
      9 THROWIFNOT          	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.participantIndex data.conditions data.telegramID b
      s1 s2 XCHG            	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.participantIndex data.telegramID data.conditions b
      STSLICE               	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.participantIndex data.telegramID b
      b{0} STSLICECONST     	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.participantIndex data.telegramID b
      OVER                  	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.participantIndex data.telegramID b data.telegramID
      ISNULL                	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.participantIndex data.telegramID b '551
      IF:<{                 	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.participantIndex data.telegramID b
        NIP                 	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.participantIndex b
        b{0} STSLICECONST   	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.participantIndex b
      }>ELSE<{              	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.participantIndex data.telegramID b
        b{1} STSLICECONST   	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.participantIndex data.telegramID b
        64 STU              	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.participantIndex b
      }>
      OVER                  	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.participantIndex b data.participantIndex
      ISNULL                	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.participantIndex b '557
      IF:<{                 	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.participantIndex b
        NIP                 	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 b
        b{0} STSLICECONST   	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 b
      }>ELSE<{              	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.participantIndex b
        b{1} STSLICECONST   	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.participantIndex b
        64 STU              	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 b
      }>
      ENDC                  	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 '563
      s8 s(-1) PUXC         	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 raffleCandidate.stateInit.USlot1 raffleCandidate.stateInit.USlot2
      // 88: val raffleCandidateAddress = address.fromValidBuilder(raffleCandidate.buildAddress())
                       // code data
          DUP2            // code data code data
          HASHCU
          SWAP
          HASHCU          // code data dataHash codeHash
          SWAP2           // dataHash codeHash code data
          CDEPTH
          SWAP
          CDEPTH          // dataHash codeHash dataDepth codeDepth
          NEWC
          x{020134} STSLICECONST // store refs_descriptor | bits_descriptor | data
          16 STU                 // store codeDepth
          16 STU                 // store dataDepth
          256 STU                // store codeHash
          256 STU                // store dataHash
          ONE HASHEXT_SHA256	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 '574
      NEWC                  	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 '574 '573
      b{10000000000} STSLICECONST	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 '574 '573
      256 STU               	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 '573
      ENDC
      CTOS                  	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 raffleCandidateAddress
      // 89: assert (inMessage.senderAddress == raffleCandidateAddress) throw ERROR_NOT_AUTHORIZED
      4919 PUSHINT          	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 raffleCandidateAddress '594=4919
      INMSG_SRC             	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 raffleCandidateAddress '594=4919 '595
      s2 PUSH               	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 raffleCandidateAddress '594=4919 '595 raffleCandidateAddress
      SDEQ                  	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 raffleCandidateAddress '594=4919 '597
      THROWANYIFNOT         	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 raffleCandidateAddress
      // 94: value: RAFFLE_CANDIDATE_SET_PARTICIPANT_INDEX_OPERATION_FEE
      1004000 PUSHINT       	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 raffleCandidateAddress '603
      // 91: val setParticipantIndexMessage = createMessage(
      NEWC                  	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 raffleCandidateAddress '603 b
      b{011000} STSLICECONST	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 raffleCandidateAddress '603 b
      s1 s2 XCHG            	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 '603 raffleCandidateAddress b
      STSLICE               	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 '603 b
      SWAP                  	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 b '603
      STGRAMS               	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 b
      322371619 PUSHINT
      139 STUR              	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 b
      s3 PUSH               	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 b storage.participantsQuantity
      64 STUR               	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 b
      ENDC                  	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 setParticipantIndexMessage
      // 99: setParticipantIndexMessage.send(SEND_MODE_PAY_FEES_SEPARATELY)
      1 PUSHINT             	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 setParticipantIndexMessage '665=1
      SENDRAWMSG            	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2
      // 103: dest: calculateRaffleParticipantAddress(contract.getAddress(), storage.participantsQuantity, storage.participantCode)
      MYADDR                	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 '668
      // 78: val data: RaffleParticipantStorage = { raffleAddress, participantIndex, userAddress: null, winnerIndex: null }
      PUSHNULL              	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 '668 '680
      PUSHNULL              	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 '668 '680 '681
      s5 PUSH               	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.raffleAddress data.userAddress data.winnerIndex data.participantIndex
      // 84: data: data.toCell()
      s0 s3 XCHG
      NEWC                  	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.participantIndex data.userAddress data.winnerIndex data.raffleAddress b
      STSLICE               	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.participantIndex data.userAddress data.winnerIndex b
      s1 s3 XCHG            	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.winnerIndex data.userAddress data.participantIndex b
      64 STU                	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.winnerIndex data.userAddress b
      OVER                  	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.winnerIndex data.userAddress b data.userAddress
      ISNULL                	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.winnerIndex data.userAddress b '686
      IF:<{                 	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.winnerIndex data.userAddress b
        NIP                 	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.winnerIndex b
        b{0} STSLICECONST   	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.winnerIndex b
      }>ELSE<{              	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.winnerIndex data.userAddress b
        b{1} STSLICECONST   	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.winnerIndex data.userAddress b
        STSLICE             	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.winnerIndex b
      }>
      OVER                  	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.winnerIndex b data.winnerIndex
      ISNULL                	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.winnerIndex b '691
      IF:<{                 	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.winnerIndex b
        NIP                 	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 b
        b{0} STSLICECONST   	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 b
      }>ELSE<{              	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.winnerIndex b
        b{1} STSLICECONST   	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 data.winnerIndex b
        8 STU               	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 b
      }>
      ENDC                  	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 '697
      // 80: return
      s7 PUSH               	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 'USlot2 'USlot1
      // 104: value: MIN_TONS_FOR_RAFFLE_PARTICIPANT_STORAGE + RAFFLE_PARTICIPANT_SET_USER_ADDRESS_OPERATION_FEE
      5821600 PUSHINT       	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 inMessageBody.USlot2 'USlot3 'USlot2 'USlot2
      // 101: val deployParticipantMessage = createMessage(
      s4 PUSH               	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 '723 'USlot3 'USlot2 'USlot2 '722
      NEWC                  	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 '723 'USlot3 'USlot2 'USlot2 '722 refb
      x{13370030} STSLICECONST	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 '723 'USlot3 'USlot2 'USlot2 '722 refb
      STSLICE               	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 '723 'USlot3 'USlot2 'USlot2 refb
      s1 s4 XCHG            	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 'USlot2 'USlot3 'USlot2 '723 refb
      STSLICE               	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 'USlot2 'USlot3 'USlot2 refb
      ENDC                  	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 'USlot2 'USlot3 'USlot2 '739
      NEWC                  	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 'USlot2 'USlot3 'USlot2 '739 b
      b{01000010000000000} STSLICECONST	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 'USlot2 'USlot3 'USlot2 '739 b
      s2 s3 PUSH2           	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 'USlot2 'USlot3 'USlot2 '739 b 'USlot2 'USlot3
                       // code data
          DUP2            // code data code data
          HASHCU
          SWAP
          HASHCU          // code data dataHash codeHash
          SWAP2           // dataHash codeHash code data
          CDEPTH
          SWAP
          CDEPTH          // dataHash codeHash dataDepth codeDepth
          NEWC
          x{020134} STSLICECONST // store refs_descriptor | bits_descriptor | data
          16 STU                 // store codeDepth
          16 STU                 // store dataDepth
          256 STU                // store codeHash
          256 STU                // store dataHash
          ONE HASHEXT_SHA256	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 'USlot2 'USlot3 'USlot2 '739 b '749
      256 STUR              	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 'USlot2 'USlot3 'USlot2 '739 b
      s0 s4 XCHG2           	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 '739 'USlot3 'USlot2 b 'USlot2
      STGRAMS               	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 '739 'USlot3 'USlot2 b
      141 PUSHINT
      113 STUR              	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 '739 'USlot3 'USlot2 b
      STREF                 	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 '739 'USlot3 b
      STREF                 	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 '739 b
      STREF                 	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 b
      ENDC                  	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 deployParticipantMessage
      // 110: deployParticipantMessage.send(SEND_MODE_PAY_FEES_SEPARATELY)
      1 PUSHINT             	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 deployParticipantMessage '777=1
      SENDRAWMSG            	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1
      // 116: body: createEmptyCell()
      <b b> PUSHREF         	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 '790
      // 112: val excessMessage = createMessage(
      NEWC                  	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 '790 b
      b{010000} STSLICECONST	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity inMessageBody.USlot1 '790 b
      s1 s2 XCHG            	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity '790 inMessageBody.USlot1 b
      STSLICE               	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity '790 b
      1 PUSHINT
      111 STUR              	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity '790 b
      STREF                 	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity b
      ENDC                  	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity excessMessage
      // 119: storage.participantsQuantity += 1
      SWAP                  	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity excessMessage storage.participantsQuantity
      INC                   	//  storage.winnersQuantity storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity excessMessage storage.participantsQuantity
      // 26: contract.setData(self.toCell())
      s0 s10 XCHG
      NEWC                  	//  storage.winnersQuantity storage.winners storage.participantsQuantity storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity excessMessage storage.ownerAddress b
      STSLICE               	//  storage.winnersQuantity storage.winners storage.participantsQuantity storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity excessMessage b
      s1 s9 XCHG            	//  storage.winnersQuantity storage.winners storage.participantsQuantity excessMessage storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.minCandidateQuantity b
      32 STU                	//  storage.winnersQuantity storage.winners storage.participantsQuantity excessMessage storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity b
      s7 PUSH               	//  storage.winnersQuantity storage.winners storage.participantsQuantity excessMessage storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity b storage.conditions
      SBITREFS              	//  storage.winnersQuantity storage.winners storage.participantsQuantity excessMessage storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity b '845 '846
      9 THROWIF             	//  storage.winnersQuantity storage.winners storage.participantsQuantity excessMessage storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity b '845
      8 PUSHPOW2            	//  storage.winnersQuantity storage.winners storage.participantsQuantity excessMessage storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity b '845 '850=256
      EQUAL                 	//  storage.winnersQuantity storage.winners storage.participantsQuantity excessMessage storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity b '849
      9 THROWIFNOT          	//  storage.winnersQuantity storage.winners storage.participantsQuantity excessMessage storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity b
      s1 s7 XCHG            	//  storage.winnersQuantity storage.winners storage.participantsQuantity excessMessage storage.candidatesQuantity storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.conditions b
      STSLICE               	//  storage.winnersQuantity storage.winners storage.participantsQuantity excessMessage storage.candidatesQuantity storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime b
      s1 s5 XCHG            	//  storage.winnersQuantity storage.winners storage.participantsQuantity excessMessage storage.candidatesQuantity storage.minCandidateReachedUnixTime storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.conditionsDuration b
      32 STU                	//  storage.winnersQuantity storage.winners storage.participantsQuantity excessMessage storage.candidatesQuantity storage.minCandidateReachedUnixTime storage.candidateCode storage.participantCode storage.minCandidateReachedLt b
      s1 s3 XCHG            	//  storage.winnersQuantity storage.winners storage.participantsQuantity excessMessage storage.candidatesQuantity storage.minCandidateReachedUnixTime storage.minCandidateReachedLt storage.participantCode storage.candidateCode b
      STREF                 	//  storage.winnersQuantity storage.winners storage.participantsQuantity excessMessage storage.candidatesQuantity storage.minCandidateReachedUnixTime storage.minCandidateReachedLt storage.participantCode b
      STREF                 	//  storage.winnersQuantity storage.winners storage.participantsQuantity excessMessage storage.candidatesQuantity storage.minCandidateReachedUnixTime storage.minCandidateReachedLt b
      64 STU                	//  storage.winnersQuantity storage.winners storage.participantsQuantity excessMessage storage.candidatesQuantity storage.minCandidateReachedUnixTime b
      64 STI                	//  storage.winnersQuantity storage.winners storage.participantsQuantity excessMessage storage.candidatesQuantity b
      64 STU                	//  storage.winnersQuantity storage.winners storage.participantsQuantity excessMessage b
      s1 s2 XCHG            	//  storage.winnersQuantity storage.winners excessMessage storage.participantsQuantity b
      64 STU                	//  storage.winnersQuantity storage.winners excessMessage b
      s1 s3 XCHG            	//  excessMessage storage.winners storage.winnersQuantity b
      8 STU                 	//  excessMessage storage.winners b
      STOPTREF              	//  excessMessage b
      ENDC                  	//  excessMessage '859
      c4 POP                	//  excessMessage
      // 122: reserveToncoinsOnBalance(MIN_TONS_FOR_RAFFLE_STORAGE, RESERVE_MODE_EXACT_AMOUNT)
      10000000 PUSHINT      	//  excessMessage '860=10000000
      0 PUSHINT             	//  excessMessage '860=10000000 '861=0
      RAWRESERVE            	//  excessMessage
      // 123: excessMessage.send(SEND_MODE_CARRY_ALL_BALANCE)
      7 PUSHPOW2            	//  excessMessage '862=128
      SENDRAWMSG            	// 
    }>                      	//  in.body storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity lazyS
    // 18: match (inMessageBody)
    x{13370013} SDBEGINSQ   	//  in.body storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity lazyS '49
    IFJMP:<{                	//  in.body storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity lazyS
      // 126: assert (inMessage.valueCoins >= MIN_TONS_FOR_RAFFLE_PARTICIPANT_STORAGE + RAFFLE_NEXT_OPERATION_FEE) throw ERROR_NOT_ENOUGH_TONS
      s13 POP               	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity
      4097 PUSHINT          	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity '865=4097
      INMSG_VALUE           	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity '865=4097 '866
      8525600 PUSHINT       	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity '865=4097 '866 '872
      GEQ                   	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity '865=4097 '873
      THROWANYIFNOT         	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity
      // 127: assert (blockchain.logicalTime() > storage.minCandidateReachedLt) throw ERROR_NOT_READY
      12289 PUSHINT         	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity '875=12289
      LTIME                 	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity '875=12289 '876
      s6 PUSH               	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity '875=12289 '876 storage.minCandidateReachedLt
      GREATER               	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity '875=12289 '877
      THROWANYIFNOT         	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity
      // 128: assert (storage.participantsQuantity > storage.winnersQuantity + 1) throw ERROR_NOT_ENOUGH_USERS
      8193 PUSHINT          	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity '879=8193
      OVER                  	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity '879=8193 storage.winnersQuantity
      INC                   	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity '879=8193 '881
      s3 PUSH               	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity '879=8193 '881 storage.participantsQuantity
      LESS                  	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity '879=8193 '882
      THROWANYIFNOT         	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity
      // 130: random.initialize()
      LTIME
      ADDRAND               	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity
      // 133: var index = 0
      0 PUSHINT             	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity index=0
      // 136: winnerParticipantIndex = random.range(storage.participantsQuantity)
      s2 PUSH               	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity index=0 storage.participantsQuantity
      RAND                  	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity index=0 winnerParticipantIndex
      s0 s13 PUSH2
      // 139: (_, success) = storage.winners.uDictGetRef(64, winnerParticipantIndex)
      64 PUSHINT            	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity index=0 winnerParticipantIndex winnerParticipantIndex storage.winners '891=64
      DICTUGETREF
      NULLSWAPIFNOT         	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity index=0 winnerParticipantIndex '892 '893
      NIP                   	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity index=0 winnerParticipantIndex success
      // 142: while (success)
      WHILE:<{
        DUP                 	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity index winnerParticipantIndex success success
      }>DO<{                	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity index winnerParticipantIndex success
        // 143: index += 1
        s0 s2 XCHG          	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index
        INC                 	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index
        2DUP                	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index winnerParticipantIndex index
        // 145: val isInBoundaryStart = winnerParticipantIndex - index >= 0
        SUB                 	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index '897
        -1 GTINT            	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index isInBoundaryStart
        // 146: if (isInBoundaryStart)
        DUP                 	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index isInBoundaryStart isInBoundaryStart
        IF:<{               	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index isInBoundaryStart
          // 147: (_, success) = storage.winners.uDictGetRef(64, winnerParticipantIndex - index)
          s3 POP            	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity isInBoundaryStart winnerParticipantIndex index
          2DUP              	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity isInBoundaryStart winnerParticipantIndex index winnerParticipantIndex index
          SUB               	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity isInBoundaryStart winnerParticipantIndex index '901
          s15 PUSH
          64 PUSHINT        	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity isInBoundaryStart winnerParticipantIndex index '901 storage.winners '902=64
          DICTUGETREF
          NULLSWAPIFNOT     	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity isInBoundaryStart winnerParticipantIndex index '903 '904
          NIP               	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity isInBoundaryStart winnerParticipantIndex index success
          // 148: if (!success)
          DUP               	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity isInBoundaryStart winnerParticipantIndex index success success
          IFNOT:<{          	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity isInBoundaryStart winnerParticipantIndex index success
            s2 s1 XCPU      	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity isInBoundaryStart success index winnerParticipantIndex index
            // 149: winnerParticipantIndex -= index
            SUB             	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity isInBoundaryStart success index winnerParticipantIndex
            // 148: if (!success)
            s0 s2 XCHG      	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity isInBoundaryStart winnerParticipantIndex index success
          }>                	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity isInBoundaryStart winnerParticipantIndex index success
          // 146: if (isInBoundaryStart)
          s0 s3 XCHG        	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index isInBoundaryStart
        }>                  	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index isInBoundaryStart
        s2 s1 PUSH2         	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index isInBoundaryStart winnerParticipantIndex index
        // 153: val isInBoundaryEnd = winnerParticipantIndex + index < storage.participantsQuantity
        ADD                 	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index isInBoundaryStart '907
        s6 PUSH             	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index isInBoundaryStart '907 storage.participantsQuantity
        LESS                	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index isInBoundaryStart isInBoundaryEnd
        // 154: if (success && isInBoundaryEnd)
        s4 PUSH             	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index isInBoundaryStart isInBoundaryEnd success
        IF:<{               	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index isInBoundaryStart isInBoundaryEnd
          DUP               	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index isInBoundaryStart isInBoundaryEnd isInBoundaryEnd
          0 NEQINT          	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index isInBoundaryStart isInBoundaryEnd '909
        }>ELSE<{            	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index isInBoundaryStart isInBoundaryEnd
          0 PUSHINT         	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index isInBoundaryStart isInBoundaryEnd '909=0
        }>
        IF:<{               	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index isInBoundaryStart isInBoundaryEnd
          // 155: (_, success) = storage.winners.uDictGet(64, winnerParticipantIndex + index)
          s4 POP            	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity isInBoundaryEnd winnerParticipantIndex index isInBoundaryStart
          s2 s1 PUSH2       	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity isInBoundaryEnd winnerParticipantIndex index isInBoundaryStart winnerParticipantIndex index
          ADD               	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity isInBoundaryEnd winnerParticipantIndex index isInBoundaryStart '914
          16 s() PUSH
          64 PUSHINT        	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity isInBoundaryEnd winnerParticipantIndex index isInBoundaryStart '914 storage.winners '915=64
          DICTUGET
          NULLSWAPIFNOT     	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity isInBoundaryEnd winnerParticipantIndex index isInBoundaryStart '916 '917
          NIP               	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity isInBoundaryEnd winnerParticipantIndex index isInBoundaryStart success
          // 156: if (!success)
          DUP               	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity isInBoundaryEnd winnerParticipantIndex index isInBoundaryStart success success
          IFNOT:<{          	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity isInBoundaryEnd winnerParticipantIndex index isInBoundaryStart success
            s3 s2 XCPU      	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity isInBoundaryEnd success index isInBoundaryStart winnerParticipantIndex index
            // 157: winnerParticipantIndex += index
            ADD             	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity isInBoundaryEnd success index isInBoundaryStart winnerParticipantIndex
            // 156: if (!success)
            s0 s3 XCHG      	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity isInBoundaryEnd winnerParticipantIndex index isInBoundaryStart success
          }>                	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity isInBoundaryEnd winnerParticipantIndex index isInBoundaryStart success
          // 154: if (success && isInBoundaryEnd)
          s0 s4 XCHG        	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index isInBoundaryStart isInBoundaryEnd
        }>                  	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index isInBoundaryStart isInBoundaryEnd
        // 161: assert (!success || isInBoundaryStart || isInBoundaryEnd) throw ERROR_INTERNAL
        20481 PUSHINT       	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index isInBoundaryStart isInBoundaryEnd '919=20481
        s5 PUSH             	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index isInBoundaryStart isInBoundaryEnd '919=20481 success
        NOT                 	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index isInBoundaryStart isInBoundaryEnd '919=20481 '920
        IF:<{               	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index isInBoundaryStart isInBoundaryEnd '919=20481
          s2 POP            	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index '919=20481 isInBoundaryEnd
          -1 PUSHINT        	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index '919=20481 isInBoundaryEnd '921=-1
        }>ELSE<{            	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index isInBoundaryStart isInBoundaryEnd '919=20481
          s0 s2 XCHG        	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index '919=20481 isInBoundaryEnd isInBoundaryStart
          0 NEQINT          	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index '919=20481 isInBoundaryEnd '921
        }>
        IF:<{               	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index '919=20481 isInBoundaryEnd
          DROP              	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index '919=20481
          -1 PUSHINT        	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index '919=20481 '925=-1
        }>ELSE<{            	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index '919=20481 isInBoundaryEnd
          0 NEQINT          	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index '919=20481 '925
        }>
        THROWANYIFNOT       	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity success winnerParticipantIndex index
        // 142: while (success)
        s0 s2 XCHG          	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity index winnerParticipantIndex success
      }>                    	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity index winnerParticipantIndex success
      // 165: contract.getAddress(), winnerParticipantIndex, storage.participantCode)
      DROP                  	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity index winnerParticipantIndex
      NIP                   	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex
      MYADDR                	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex '937
      // 78: val data: RaffleParticipantStorage = { raffleAddress, participantIndex, userAddress: null, winnerIndex: null }
      PUSHNULL              	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex '937 '949
      PUSHNULL              	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex '937 '949 '950
      s3 PUSH               	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex data.raffleAddress data.userAddress data.winnerIndex data.participantIndex
      // 84: data: data.toCell()
      s0 s3 XCHG
      NEWC                  	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex data.participantIndex data.userAddress data.winnerIndex data.raffleAddress b
      STSLICE               	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex data.participantIndex data.userAddress data.winnerIndex b
      s1 s3 XCHG            	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex data.winnerIndex data.userAddress data.participantIndex b
      64 STU                	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex data.winnerIndex data.userAddress b
      OVER                  	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex data.winnerIndex data.userAddress b data.userAddress
      ISNULL                	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex data.winnerIndex data.userAddress b '955
      IF:<{                 	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex data.winnerIndex data.userAddress b
        NIP                 	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex data.winnerIndex b
        b{0} STSLICECONST   	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex data.winnerIndex b
      }>ELSE<{              	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex data.winnerIndex data.userAddress b
        b{1} STSLICECONST   	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex data.winnerIndex data.userAddress b
        STSLICE             	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex data.winnerIndex b
      }>
      OVER                  	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex data.winnerIndex b data.winnerIndex
      ISNULL                	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex data.winnerIndex b '960
      IF:<{                 	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex data.winnerIndex b
        NIP                 	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex b
        b{0} STSLICECONST   	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex b
      }>ELSE<{              	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex data.winnerIndex b
        b{1} STSLICECONST   	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex data.winnerIndex b
        8 STU               	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex b
      }>
      ENDC                  	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex '966
      // 80: return
      s7 PUSH               	//  lazyS storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex raffleParticipantAddress.stateInit.USlot2 raffleParticipantAddress.stateInit.USlot1
      // 167: val winnerMessage = createMessage(
      s0 s15 XCHG           	//  raffleParticipantAddress.stateInit.USlot1 storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex raffleParticipantAddress.stateInit.USlot2 lazyS
      LDGRAMS               	//  raffleParticipantAddress.stateInit.USlot1 storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex raffleParticipantAddress.stateInit.USlot2 inMessageBody.USlot1 s
      // 4: assert (s.remainingRefsCount() <= 1) throw 5
      DUP                   	//  raffleParticipantAddress.stateInit.USlot1 storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex raffleParticipantAddress.stateInit.USlot2 inMessageBody.USlot1 s s
      SREFS                 	//  raffleParticipantAddress.stateInit.USlot1 storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex raffleParticipantAddress.stateInit.USlot2 inMessageBody.USlot1 s '976
      2 LESSINT             	//  raffleParticipantAddress.stateInit.USlot1 storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex raffleParticipantAddress.stateInit.USlot2 inMessageBody.USlot1 s '978
      5 THROWIFNOT          	//  raffleParticipantAddress.stateInit.USlot1 storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex raffleParticipantAddress.stateInit.USlot2 inMessageBody.USlot1 inMessageBody.USlot2
      // 169: dest: address.fromValidBuilder(raffleParticipantAddress.buildAddress())
      s1 16 s() XCHG        	//  inMessageBody.USlot1 storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex raffleParticipantAddress.stateInit.USlot2 raffleParticipantAddress.stateInit.USlot1 inMessageBody.USlot2
      s0 s2 XCHG            	//  inMessageBody.USlot1 storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex inMessageBody.USlot2 raffleParticipantAddress.stateInit.USlot1 raffleParticipantAddress.stateInit.USlot2
                       // code data
          DUP2            // code data code data
          HASHCU
          SWAP
          HASHCU          // code data dataHash codeHash
          SWAP2           // dataHash codeHash code data
          CDEPTH
          SWAP
          CDEPTH          // dataHash codeHash dataDepth codeDepth
          NEWC
          x{020134} STSLICECONST // store refs_descriptor | bits_descriptor | data
          16 STU                 // store codeDepth
          16 STU                 // store dataDepth
          256 STU                // store codeHash
          256 STU                // store dataHash
          ONE HASHEXT_SHA256	//  inMessageBody.USlot1 storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex inMessageBody.USlot2 '992
      NEWC                  	//  inMessageBody.USlot1 storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex inMessageBody.USlot2 '992 '991
      b{10000000000} STSLICECONST	//  inMessageBody.USlot1 storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex inMessageBody.USlot2 '992 '991
      256 STU               	//  inMessageBody.USlot1 storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex inMessageBody.USlot2 '991
      ENDC
      CTOS                  	//  inMessageBody.USlot1 storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex inMessageBody.USlot2 '1011
      // 167: val winnerMessage = createMessage(
      NEWC                  	//  inMessageBody.USlot1 storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex inMessageBody.USlot2 '1011 refb
      x{13370031} STSLICECONST	//  inMessageBody.USlot1 storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex inMessageBody.USlot2 '1011 refb
      s4 PUSH               	//  inMessageBody.USlot1 storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex inMessageBody.USlot2 '1011 refb storage.winnersQuantity
      8 STUR                	//  inMessageBody.USlot1 storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex inMessageBody.USlot2 '1011 refb
      SWAP                  	//  inMessageBody.USlot1 storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex inMessageBody.USlot2 refb '1011
      s0 16 s() XCHG        	//  '1011 storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex inMessageBody.USlot2 refb inMessageBody.USlot1
      STGRAMS               	//  '1011 storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex inMessageBody.USlot2 b
      // 11: b.storeSlice(self)
      STSLICE               	//  '1011 storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex refb
      // 167: val winnerMessage = createMessage(
      ENDC                  	//  '1011 storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex '1038
      NEWC                  	//  '1011 storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex '1038 b
      b{010000} STSLICECONST	//  '1011 storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex '1038 b
      s1 s15 XCHG           	//  '1038 storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex '1011 b
      STSLICE               	//  '1038 storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex b
      1 PUSHINT
      111 STUR              	//  '1038 storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerParticipantIndex b
      s1 s14 XCHG           	//  winnerParticipantIndex storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity '1038 b
      STREF                 	//  winnerParticipantIndex storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity b
      ENDC                  	//  winnerParticipantIndex storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerMessage
      // 178: storage.winners.uDictSetRef(64, winnerParticipantIndex, createEmptyCell())
      <b b> PUSHREF         	//  winnerParticipantIndex storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity winnerMessage '1076
      s0 s14 s13 XCHG3
      64 PUSHINT            	//  winnerMessage storage.winnersQuantity storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity '1076 winnerParticipantIndex storage.winners '1077=64
      DICTUSETREF           	//  winnerMessage storage.winnersQuantity storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winners
      // 179: storage.winnersQuantity = storage.winnersQuantity + 1
      s0 s11 XCHG           	//  winnerMessage storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity
      INC                   	//  winnerMessage storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity
      // 26: contract.setData(self.toCell())
      s0 s10 XCHG
      NEWC                  	//  winnerMessage storage.winners storage.winnersQuantity storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.ownerAddress b
      STSLICE               	//  winnerMessage storage.winners storage.winnersQuantity storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity b
      s1 s9 XCHG            	//  winnerMessage storage.winners storage.winnersQuantity storage.participantsQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.minCandidateQuantity b
      32 STU                	//  winnerMessage storage.winners storage.winnersQuantity storage.participantsQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity b
      s7 PUSH               	//  winnerMessage storage.winners storage.winnersQuantity storage.participantsQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity b storage.conditions
      SBITREFS              	//  winnerMessage storage.winners storage.winnersQuantity storage.participantsQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity b '1084 '1085
      9 THROWIF             	//  winnerMessage storage.winners storage.winnersQuantity storage.participantsQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity b '1084
      8 PUSHPOW2            	//  winnerMessage storage.winners storage.winnersQuantity storage.participantsQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity b '1084 '1089=256
      EQUAL                 	//  winnerMessage storage.winners storage.winnersQuantity storage.participantsQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity b '1088
      9 THROWIFNOT          	//  winnerMessage storage.winners storage.winnersQuantity storage.participantsQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity b
      s1 s7 XCHG            	//  winnerMessage storage.winners storage.winnersQuantity storage.participantsQuantity storage.candidatesQuantity storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.conditions b
      STSLICE               	//  winnerMessage storage.winners storage.winnersQuantity storage.participantsQuantity storage.candidatesQuantity storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime b
      s1 s5 XCHG            	//  winnerMessage storage.winners storage.winnersQuantity storage.participantsQuantity storage.candidatesQuantity storage.minCandidateReachedUnixTime storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.conditionsDuration b
      32 STU                	//  winnerMessage storage.winners storage.winnersQuantity storage.participantsQuantity storage.candidatesQuantity storage.minCandidateReachedUnixTime storage.candidateCode storage.participantCode storage.minCandidateReachedLt b
      s1 s3 XCHG            	//  winnerMessage storage.winners storage.winnersQuantity storage.participantsQuantity storage.candidatesQuantity storage.minCandidateReachedUnixTime storage.minCandidateReachedLt storage.participantCode storage.candidateCode b
      STREF                 	//  winnerMessage storage.winners storage.winnersQuantity storage.participantsQuantity storage.candidatesQuantity storage.minCandidateReachedUnixTime storage.minCandidateReachedLt storage.participantCode b
      STREF                 	//  winnerMessage storage.winners storage.winnersQuantity storage.participantsQuantity storage.candidatesQuantity storage.minCandidateReachedUnixTime storage.minCandidateReachedLt b
      64 STU                	//  winnerMessage storage.winners storage.winnersQuantity storage.participantsQuantity storage.candidatesQuantity storage.minCandidateReachedUnixTime b
      64 STI                	//  winnerMessage storage.winners storage.winnersQuantity storage.participantsQuantity storage.candidatesQuantity b
      64 STU                	//  winnerMessage storage.winners storage.winnersQuantity storage.participantsQuantity b
      64 STU                	//  winnerMessage storage.winners storage.winnersQuantity b
      8 STU                 	//  winnerMessage storage.winners b
      STOPTREF              	//  winnerMessage b
      ENDC                  	//  winnerMessage '1098
      c4 POP                	//  winnerMessage
      // 182: reserveToncoinsOnBalance(MIN_TONS_FOR_RAFFLE_STORAGE, RESERVE_MODE_EXACT_AMOUNT)
      10000000 PUSHINT      	//  winnerMessage '1099=10000000
      0 PUSHINT             	//  winnerMessage '1099=10000000 '1100=0
      RAWRESERVE            	//  winnerMessage
      // 183: winnerMessage.send(SEND_MODE_CARRY_ALL_BALANCE | SEND_MODE_IGNORE_ERRORS)
      130 PUSHINT           	//  winnerMessage '1103
      SENDRAWMSG            	// 
    }>                      	//  in.body storage.winners storage.ownerAddress storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.candidateCode storage.participantCode storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity lazyS
    s11 s12 XCHG
    12 BLKDROP              	//  in.body storage.ownerAddress
    // 186: assert (inMessage.body.isEmpty()) throw 0xFFFF
    16 PUSHPOW2DEC          	//  in.body storage.ownerAddress '1104=65535
    s0 s2 XCHG              	//  '1104=65535 storage.ownerAddress in.body
    SEMPTY                  	//  '1104=65535 storage.ownerAddress '1105
    s1 s2 XCHG              	//  storage.ownerAddress '1104=65535 '1105
    THROWANYIFNOT           	//  storage.ownerAddress
    // 192: body: createEmptyCell()
    <b b> PUSHREF           	//  storage.ownerAddress '1119
    // 188: val excessMessage = createMessage(
    NEWC                    	//  storage.ownerAddress '1119 b
    b{010000} STSLICECONST  	//  storage.ownerAddress '1119 b
    s1 s2 XCHG              	//  '1119 storage.ownerAddress b
    STSLICE                 	//  '1119 b
    1 PUSHINT
    111 STUR                	//  '1119 b
    STREF                   	//  b
    ENDC                    	//  excessMessage
    // 195: reserveToncoinsOnBalance(MIN_TONS_FOR_RAFFLE_STORAGE, RESERVE_MODE_EXACT_AMOUNT)
    10000000 PUSHINT        	//  excessMessage '1169=10000000
    0 PUSHINT               	//  excessMessage '1169=10000000 '1170=0
    RAWRESERVE              	//  excessMessage
    // 196: excessMessage.send(SEND_MODE_CARRY_ALL_BALANCE)
    7 PUSHPOW2              	//  excessMessage '1171=128
    SENDRAWMSG              	// 
  }>
  // contracts/raffle.tolk:201:5
  raffleData() PROC:<{        	// 
    // 22: return RaffleStorage.fromCell(contract.getData())
    c4 PUSH                 	//  '13
    // 202: val storage = lazy RaffleStorage.load()
    CTOS                    	//  lazyS
    // 203: return (
    LDMSGADDR               	//  '17 lazyS
    NIP                     	//  lazyS
    32 LDU                  	//  storage.minCandidateQuantity lazyS
    256 LDSLICE             	//  storage.minCandidateQuantity storage.conditions lazyS
    32 LDU                  	//  storage.minCandidateQuantity storage.conditions storage.conditionsDuration lazyS
    LDREF                   	//  storage.minCandidateQuantity storage.conditions storage.conditionsDuration '24 lazyS
    NIP                     	//  storage.minCandidateQuantity storage.conditions storage.conditionsDuration lazyS
    LDREF                   	//  storage.minCandidateQuantity storage.conditions storage.conditionsDuration '25 lazyS
    NIP                     	//  storage.minCandidateQuantity storage.conditions storage.conditionsDuration lazyS
    64 LDU                  	//  storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.minCandidateReachedLt lazyS
    64 LDI                  	//  storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.minCandidateReachedLt storage.minCandidateReachedUnixTime lazyS
    64 LDU                  	//  storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity lazyS
    64 LDU                  	//  storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity lazyS
    8 LDU                   	//  storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity lazyS
    PLDOPTREF               	//  storage.minCandidateQuantity storage.conditions storage.conditionsDuration storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity storage.winners
    s6 s7 XCHG              	//  storage.minCandidateQuantity storage.conditionsDuration storage.conditions storage.minCandidateReachedLt storage.minCandidateReachedUnixTime storage.candidatesQuantity storage.participantsQuantity storage.winnersQuantity storage.winners
  }>
  // contracts/raffle.tolk:216:5
  raffleCandidateAddress() PROC:<{	//  userAddress
    // 22: return RaffleStorage.fromCell(contract.getData())
    c4 PUSH                 	//  userAddress '14
    // 217: val storage = lazy RaffleStorage.load()
    CTOS                    	//  userAddress lazyS
    // 218: val candidateAddress = calculateRaffleCandidateAddress(contract.getAddress(), userAddress, storage.candidateCode)
    PLDREF                  	//  userAddress storage.candidateCode
    MYADDR                  	//  userAddress storage.candidateCode '26
    // 66: val data: RaffleCandidateStorage = { raffleAddress, userAddress, conditions: createBits256None(), isMatched: false, telegramID: null, participantIndex: null }
    x{0000000000000000000000000000000000000000000000000000000000000000} PUSHSLICE	//  userAddress storage.candidateCode '26 '40
    PUSHNULL                	//  userAddress storage.candidateCode '26 '40 '42
    PUSHNULL                	//  data.userAddress storage.candidateCode data.raffleAddress data.conditions data.telegramID data.participantIndex
    // 72: data: data.toCell()
    s0 s3 XCHG
    NEWC                    	//  data.userAddress storage.candidateCode data.participantIndex data.conditions data.telegramID data.raffleAddress b
    STSLICE                 	//  data.userAddress storage.candidateCode data.participantIndex data.conditions data.telegramID b
    s1 s5 XCHG              	//  data.telegramID storage.candidateCode data.participantIndex data.conditions data.userAddress b
    STSLICE                 	//  data.telegramID storage.candidateCode data.participantIndex data.conditions b
    OVER                    	//  data.telegramID storage.candidateCode data.participantIndex data.conditions b data.conditions
    SBITREFS                	//  data.telegramID storage.candidateCode data.participantIndex data.conditions b '47 '48
    9 THROWIF               	//  data.telegramID storage.candidateCode data.participantIndex data.conditions b '47
    8 PUSHPOW2              	//  data.telegramID storage.candidateCode data.participantIndex data.conditions b '47 '52=256
    EQUAL                   	//  data.telegramID storage.candidateCode data.participantIndex data.conditions b '51
    9 THROWIFNOT            	//  data.telegramID storage.candidateCode data.participantIndex data.conditions b
    STSLICE                 	//  data.telegramID storage.candidateCode data.participantIndex b
    b{0} STSLICECONST       	//  data.telegramID storage.candidateCode data.participantIndex b
    s3 PUSH                 	//  data.telegramID storage.candidateCode data.participantIndex b data.telegramID
    ISNULL                  	//  data.telegramID storage.candidateCode data.participantIndex b '55
    IF:<{                   	//  data.telegramID storage.candidateCode data.participantIndex b
      s3 POP                	//  b storage.candidateCode data.participantIndex
      s0 s2 XCHG            	//  data.participantIndex storage.candidateCode b
      b{0} STSLICECONST     	//  data.participantIndex storage.candidateCode b
    }>ELSE<{                	//  data.telegramID storage.candidateCode data.participantIndex b
      b{1} STSLICECONST     	//  data.telegramID storage.candidateCode data.participantIndex b
      s1 s3 XCHG            	//  data.participantIndex storage.candidateCode data.telegramID b
      64 STU                	//  data.participantIndex storage.candidateCode b
    }>
    s2 PUSH                 	//  data.participantIndex storage.candidateCode b data.participantIndex
    ISNULL                  	//  data.participantIndex storage.candidateCode b '61
    IF:<{                   	//  data.participantIndex storage.candidateCode b
      1 2 BLKDROP2          	//  storage.candidateCode b
      b{0} STSLICECONST     	//  storage.candidateCode b
    }>ELSE<{                	//  data.participantIndex storage.candidateCode b
      b{1} STSLICECONST     	//  data.participantIndex storage.candidateCode b
      s1 s2 XCHG            	//  storage.candidateCode data.participantIndex b
      64 STU                	//  storage.candidateCode b
    }>
    ENDC                    	//  candidateAddress.stateInit.USlot1 candidateAddress.stateInit.USlot2
    // 219: return address.fromValidBuilder(candidateAddress.buildAddress())
                     // code data
        DUP2            // code data code data
        HASHCU
        SWAP
        HASHCU          // code data dataHash codeHash
        SWAP2           // dataHash codeHash code data
        CDEPTH
        SWAP
        CDEPTH          // dataHash codeHash dataDepth codeDepth
        NEWC
        x{020134} STSLICECONST // store refs_descriptor | bits_descriptor | data
        16 STU                 // store codeDepth
        16 STU                 // store dataDepth
        256 STU                // store codeHash
        256 STU                // store dataHash
        ONE HASHEXT_SHA256  	//  '77
    NEWC                    	//  '77 '76
    b{10000000000} STSLICECONST	//  '77 '76
    256 STU                 	//  '76
    ENDC
    CTOS                    	//  '96
  }>
  // contracts/raffle.tolk:222:5
  raffleParticipantAddress() PROC:<{	//  participantIndex
    // 22: return RaffleStorage.fromCell(contract.getData())
    c4 PUSH                 	//  participantIndex '14
    // 223: val storage = lazy RaffleStorage.load()
    CTOS                    	//  participantIndex lazyS
    // 224: val participantAddress = calculateRaffleParticipantAddress(contract.getAddress(), participantIndex, storage.participantCode)
    LDREF                   	//  participantIndex '18 lazyS
    NIP                     	//  participantIndex lazyS
    PLDREF                  	//  participantIndex storage.participantCode
    MYADDR                  	//  participantIndex storage.participantCode '27
    // 78: val data: RaffleParticipantStorage = { raffleAddress, participantIndex, userAddress: null, winnerIndex: null }
    PUSHNULL                	//  participantIndex storage.participantCode '27 '39
    PUSHNULL                	//  data.participantIndex storage.participantCode data.raffleAddress data.userAddress data.winnerIndex
    // 84: data: data.toCell()
    s0 s2 XCHG
    NEWC                    	//  data.participantIndex storage.participantCode data.winnerIndex data.userAddress data.raffleAddress b
    STSLICE                 	//  data.participantIndex storage.participantCode data.winnerIndex data.userAddress b
    s1 s4 XCHG              	//  data.userAddress storage.participantCode data.winnerIndex data.participantIndex b
    64 STU                  	//  data.userAddress storage.participantCode data.winnerIndex b
    s3 PUSH                 	//  data.userAddress storage.participantCode data.winnerIndex b data.userAddress
    ISNULL                  	//  data.userAddress storage.participantCode data.winnerIndex b '45
    IF:<{                   	//  data.userAddress storage.participantCode data.winnerIndex b
      s3 POP                	//  b storage.participantCode data.winnerIndex
      s0 s2 XCHG            	//  data.winnerIndex storage.participantCode b
      b{0} STSLICECONST     	//  data.winnerIndex storage.participantCode b
    }>ELSE<{                	//  data.userAddress storage.participantCode data.winnerIndex b
      b{1} STSLICECONST     	//  data.userAddress storage.participantCode data.winnerIndex b
      s1 s3 XCHG            	//  data.winnerIndex storage.participantCode data.userAddress b
      STSLICE               	//  data.winnerIndex storage.participantCode b
    }>
    s2 PUSH                 	//  data.winnerIndex storage.participantCode b data.winnerIndex
    ISNULL                  	//  data.winnerIndex storage.participantCode b '50
    IF:<{                   	//  data.winnerIndex storage.participantCode b
      1 2 BLKDROP2          	//  storage.participantCode b
      b{0} STSLICECONST     	//  storage.participantCode b
    }>ELSE<{                	//  data.winnerIndex storage.participantCode b
      b{1} STSLICECONST     	//  data.winnerIndex storage.participantCode b
      s1 s2 XCHG            	//  storage.participantCode data.winnerIndex b
      8 STU                 	//  storage.participantCode b
    }>
    ENDC                    	//  participantAddress.stateInit.USlot1 participantAddress.stateInit.USlot2
    // 225: return address.fromValidBuilder(participantAddress.buildAddress())
                     // code data
        DUP2            // code data code data
        HASHCU
        SWAP
        HASHCU          // code data dataHash codeHash
        SWAP2           // dataHash codeHash code data
        CDEPTH
        SWAP
        CDEPTH          // dataHash codeHash dataDepth codeDepth
        NEWC
        x{020134} STSLICECONST // store refs_descriptor | bits_descriptor | data
        16 STU                 // store codeDepth
        16 STU                 // store dataDepth
        256 STU                // store codeHash
        256 STU                // store dataHash
        ONE HASHEXT_SHA256  	//  '66
    NEWC                    	//  '66 '65
    b{10000000000} STSLICECONST	//  '66 '65
    256 STU                 	//  '65
    ENDC
    CTOS                    	//  '85
  }>
}END>c
